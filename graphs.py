import numpy as np
from matplotlib import pyplot as plt
from matplotlib import animation
import xlsxwriter
#Va=[0,2.5,4,5,6,7,8,9,10.5,11,12,13.5,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.5,23,23.5,24,24.5,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30,30.5,31,31.5,32,32.5,33,33.5,34,34.5,35,35.5,36,36.5,38,39,40,41,42,43,43.5,44,44.5,45,45.5,46,46.5,47,48,48.5,49,49.5,50,50.5,51.5,52.5,53.5,55]
#Ia=[0,0,2,3,5,7,12,15,23,25,29,39,43,45,50,49,51,54,56,57,58,59,60,61,61,60,55,56,55,54,53,53,58,56,54,51,50,49,48,47,46,46,45,44,43,41,42,42,43,44,46,47,49,51,53,55,56,60,63,65,66,67,67,66,72,72,72,72,71,70,70,69,65,65,66,66,66,67,67,68,69]
Va=[0,2.5,4,5,6,7,8,9,10.5,11,12,13.5,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,20.5,21,21.5,22,22.5,23,23.5,24,24.5,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30,30.5,31,31.5,32,32.5,33,33.5,34,34.5,35,35.5,36,36.5,38,39,40,41,42,43,43.5,44,44.5,45,45.5,46,46.5,47,48,48.5,49,49.5,50,50.5,51.5,52.5,53.5,55]
Ia=[0,0,2,3,5,7,12,15,23,25,29,39,43,45,47,49,51,54,56,57,58,59,60,60.5,60.5,60.5,60,59,58,57,56,55,53,51,49,48,47,46,45,44,43,42.5,42,41.5,41,41,41,42,43,44,46,47,49,51,53,55,56,60,63,65,66,67,67,67,67,66.5,66.5,66,66,65.5,65.5,65,65,65,65,65.5,66,66.5,67,68,69]


#workbook = xlsxwriter.Workbook('arrays.xlsx')
#worksheet = workbook.add_worksheet()
#array=[Va,Ia]
#row=0
#for col, data in enumerate(array):
#    worksheet.write_column(row, col, data)
#
#workbook.close()

errVa=0.01*75
errIa=0.01*100
print(len(Va))
print(len(Ia))
z=np.polyfit(Va,Ia,13)
IaA=[]
VaA=np.arange(0,54,0.1)
p=np.poly1d(z)
IaA=p(VaA)
f1=20.5
f2=42.5
h=6.6*10**(-34)
Qe=1.6*10**(-19)
E1=f1*Qe
plt.figure(figsize=[15,10])
plt.plot(Va,Ia,'ko',markersize=3)
plt.plot(VaA,IaA,'-k')
plt.xlabel('Ускоряющий потенциал $ \phi_y$, В')
plt.ylabel('Анодный ток $ i_a,\ mA$')
plt.axvline(f1,ymax=0.85,ymin=0,linestyle='--',color='k')
plt.axvline(f2,ymax=0.92,ymin=0,linestyle='--',color='k')
plt.text(f1,-6.8,'$\phi_1$')
plt.text(f2,-6.8,'$\phi_2$')
plt.errorbar(Va,Ia,xerr=errVa,yerr=errIa,linestyle='',color='k')
plt.grid()
#plt.savefig('graphs/1.png',dpi=300)
plt.show()